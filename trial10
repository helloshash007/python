import os
import sys
import time
import argparse
import json
import traceback
import glob
import shutil
from datetime import datetime
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
from file_Parser import parse_file  # Import the function from file_Parser.py

class Watcher:
    DIRECTORY_TO_WATCH = "/abc/wc/reponse/"

    def __init__(self):
        self.observer = Observer()

    def run(self):
        event_handler = Handler()
        self.observer.schedule(event_handler, self.DIRECTORY_TO_WATCH, recursive=True)
        self.observer.start()
        try:
            while True:
                time.sleep(10)
        except:
            self.observer.stop()
            print("Error")
        self.observer.join()

class Handler(FileSystemEventHandler):

    @staticmethod
    def on_any_event(event):
        if event.is_directory:
            return None
        elif event.event_type == 'created':
            now = datetime.now()
            print("Process Start Time =", now)
            print(f"File Created: {event.src_path}")
            if event.src_path.endswith('.txt'):
                print("New File MT940 Resisxsd")
                eventFileName = event.src_path
                parse_file(eventFileName)  # Call the function from file_Parser.py directly
        elif event.event_type == 'modified':
            print(f"Received modified event - {event.src_path}")
            return event

if __name__ == '__main__':
    w = Watcher()
    w.run()
    # Continue with the code from the second snippet
    # ...

# Rest of the code from the second snippet
# ...


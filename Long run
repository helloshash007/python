import psycopg2
import pandas as pd
from datetime import datetime
import time
import os

# Database connection details
db_host = "your_db_host"
db_port = "your_db_port"
db_name = "your_db_name"
db_user = "your_db_user"
db_password = "your_db_password"

# Excel file path
excel_file_path = "long_running_queries.xlsx"

def get_long_running_queries():
    # Connect to the database
    conn = psycopg2.connect(
        host=db_host,
        port=db_port,
        dbname=db_name,
        user=db_user,
        password=db_password
    )

    # Create a cursor
    cur = conn.cursor()

    # Define the query to get long-running queries (running for more than 20 minutes)
    query = """
    SELECT pid, age(clock_timestamp(), query_start) AS duration, usename, query
    FROM pg_stat_activity
    WHERE state = 'active'
    AND query_start < NOW() - INTERVAL '20 minutes'
    ORDER BY duration DESC;
    """

    # Execute the query
    cur.execute(query)

    # Fetch all results
    long_running_queries = cur.fetchall()

    # Close the cursor and the connection
    cur.close()
    conn.close()

    # Return the results
    return long_running_queries

def save_to_excel(data):
    # Create a DataFrame
    df = pd.DataFrame(data, columns=["PID", "Duration", "User", "Query"])

    # Add a timestamp column
    df["Timestamp"] = datetime.now()

    # Check if the Excel file exists
    if os.path.exists(excel_file_path):
        # Read the existing data
        existing_df = pd.read_excel(excel_file_path)
        # Append the new data
        df = pd.concat([existing_df, df], ignore_index=True)

    # Save to Excel using xlsxwriter engine
    with pd.ExcelWriter(excel_file_path, engine='xlsxwriter') as writer:
        df.to_excel(writer, index=False)

while True:
    # Get long-running queries
    data = get_long_running_queries()
    
    if data:
        # Save the data to Excel
        save_to_excel(data)

    # Wait for 10 minutes before the next run
    time.sleep(600)  # 600 seconds = 10 minutes
